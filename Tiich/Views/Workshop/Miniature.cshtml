@model List<Tiich.ViewModels.VMWorkshop>

@{
    int index = 0;
    int totalWs = 0; ;
    foreach(var vm in Model)
    {
        if(vm.Workshops != null)
        {
            if(vm.Workshops.Count != 0)
            {
                <div class="panel panel-group panel-custom">
                    <div class="panel-heading "  role="tab" >
                        <h3 style="display:inline-block;">
                                @vm.Category
                        </h3>
                        <ul style="display:inline-block;float:right;height:100%;background-color:white;font-size:1.5em;" class="nav nav-pills">
                            <li class="navbar-brand" onclick="SortBy(@(index),'distance')">
                                <span class=" glyphicon glyphicon-plane" style="font-size:1.1em;"> </span>
                            </li>
                            <li class="navbar-brand" onclick="SortBy(@(index),'date')">
                                <span class=" glyphicon glyphicon-calendar" style="font-size:1.1em;"></span>
                            </li>
                            <li class="navbar-text wraper" id="@index" style="background-color: #3498db;">
                                <span class="btn" style="color:white;">@vm.Workshops.Count</span>
                            </li>
                        </ul>
                    </div>
                     <ul class="list-group" id=@("content" + index)>
                            @{
                            int i = 0;
                            foreach (var ws in vm.Workshops)
                            {
                                string style = i % 2 == 1 ? "background-color:#EEEEEE;" : "";
                        <li class="panel-body list-group-item clickableList" style="@style" id="@ws.ID">
                            <input type="hidden" id="indexOnTotal@(ws.ID)" value="@totalWs"><!-- Workshop -->
                            <div class="col-lg-9">
                                <h3>@ws.Label.Trim()</h3>
                                <p>@ws.Details</p>
                                <p>@ws.Address</p>
                                <p id="wsDate_@(ws.ID)">@ws.CreationDate</p>

                                <h4 id="wsKm_@totalWs" class="km">

                                </h4>
                                <input type="hidden" id="wsLat_@totalWs" value="@ws.Lat"/>
                                <input type="hidden" id="wsLng_@totalWs" value="@ws.Lng"/>
                            </div>

                            <!-- User-->
                            <div class="col-lg-3">

                                <a href="User/Account/@ws.UserID">
                                    @{

                                string imgPath = "/Content/Avatars/" + (ws.User.Avatar == null ? "null" : ws.User.Avatar) + ".png";
                                            <img src=@imgPath class="roundedImage" />
                                    }
                                </a>

                            </div>
                        </li>
                                i++;
                                totalWs++;
                            }
                            }
                        </ul>
                </div>
            }
        }
    index++;
    <input type="hidden" id="totalWS" value="@totalWs" />
}

}

<!-- sorting scripts -->
<script type="text/javascript">

    function ExtractWorkshopsIDS(id)
    {
        var cId = "content" + id;
        var ws = $("#" + cId).find("li");

        var res = [];
        for (var i = 0; i < ws.length; i++) {
           
            var id = ws[i].id;
            //alert(id);
            res.push(id);
        }
        return res;
    }


    function SortBy(contentID, sortType)
    {
        var wsTab = [];
        var wsTab = ExtractWorkshopsIDS(contentID);
        var assoArray = [];

        switch (sortType) {
            case "distance":
                //Fill Array
                for (var i = 0; i < wsTab.length; i++) {
                    var id = wsTab[i];
                    var val = $("#indexOnTotal" + id).val();

                    var kmID = "#wsKm_" + val;
                    var kmDiv = $(kmID).html();
                    var kmValue = -1;

                    //alert(kmID);
                    kmValue = parseFloat(kmDiv.replace("km", ""));

                    if (isNaN(kmValue)) {
                        kmValue = -1;
                    }
                    assoArray.push({ name: id, value: kmValue });
                }

                //sort array
                assoArray = assoArray.sort(function (a, b) {
                    return a.value < b.value;
                });

                break;
            case "date":
                //Fill Array
                for (var i = 0; i < wsTab.length; i++) {
                    var id = wsTab[i];
                    var val = $("#indexOnTotal" + id).val();
                    var dateID = "#wsDate_" + id;
                    var dateVal = $(dateID).html();
                    assoArray.push({ name: id, value: dateVal });

                    assoArray = assoArray.sort(function (a, b) {
                        var da = a.value.split(" ")[0].split("/");
                        var dateA = new Date(da[2],da[1], da[0]);
                        
                        var db = b.value.split(" ")[0].split("/");
                        var dateB = new Date(db[2],db[1], db[0]);

                        return dateA.getTime() < dateB.getTime();
                    });
                }
                break;
            default:

        }
        
        alert(JSON.stringify(assoArray));
        var replacingHtml = "";
        for (var i = 0; i < assoArray.length; i++) {
            var id = assoArray[i].name;

            var text = $("#" + id).html();

            // rebuilding 
            var style = i % 2 == 1 ? "background-color:#EEEEEE;" : "";
            text = "<li class='panel-body list-group-item clickableList' style='" + style + "' id="+ id + ">" + text;
            text += "</li>";
            ///

            replacingHtml += text;
        }
        //alert(replacingHtml);

        //alert($("#content" + contentID).html());
        $("#content" + contentID).html(replacingHtml);
        $(".clickableList").click(function (obj) {
            var id = $(this).attr('id');
            window.location.replace("/Workshop/Create/" + id);
        })
    }
</script>   
 
<script type="text/javascript">
    $(document).ready(function () {
        $(".clickableList").click(function (obj) {
            var id = $(this).attr('id');
            window.location.replace("/Workshop/Create/" + id);
        })

        $(".wraper").click(function (obj) {
          
            var id = $(this).attr('id');
            $("#content" + id).slideToggle(1000);
        })
    })

    function distance(lat1, lon1, lat2, lon2, unit) {
        //alert(lat1 + " " + lat2 + "// " + )
        var radlat1 = Math.PI * lat1 / 180
        var radlat2 = Math.PI * lat2 / 180
        var radlon1 = Math.PI * lon1 / 180
        var radlon2 = Math.PI * lon2 / 180
        var theta = lon1 - lon2
        var radtheta = Math.PI * theta / 180
        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);
        dist = Math.acos(dist)
        dist = dist * 180 / Math.PI
        dist = dist * 60 * 1.1515
        if (unit == "K") { dist = dist * 1.609344 }
        if (unit == "N") { dist = dist * 0.8684 }
        return dist
    }


    function showMap(position) {
        // Show a map centered at (position.coords.latitude, position.coords.longitude).

        var myLat = position.coords.latitude;
        var myLng = position.coords.longitude;

        var latsuff = "wsLat_";
        var lngsuff = "wsLng_";
        var kmsuff = "wsKm_";
        var i = 0;
        var nbWs = parseInt($("#totalWS").val());

        for (var i = 0; i <= nbWs ; i++) {
            var lt = "#" + latsuff + i;
            var lg = "#" + lngsuff + i;
            var kms = "#" + kmsuff + i;
            var localLat = $(lt).val();
            var localLng = $(lg).val();

            if (localLat != null)
            {
                localLat = localLat.replace(",", ".");
                localLng = localLng.replace(",", ".");
                localLat = parseFloat(localLat);
                localLng = parseFloat(localLng);


                var km = distance(myLat, myLng, localLat, localLng, "K");

                if (!isNaN(km)) {
                    km = Math.round(km, 2);
                    var processedKm = km + " km";
                    //processedKm = (myLat + " " + localLat + " " + myLng + " " + localLng);
                    $(kms).html(processedKm);
                }
            }
        }

    }
    // One-shot position request.
    navigator.geolocation.getCurrentPosition(showMap);
</script>